@inject IAdminService AdminService

<table class="table mt-2">
    <thead>
        <tr>
            <th>Director</th>
            <th>Films Directed</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Name</td>
                <td>@GetFilmCount(item.Id)</td>
                <td>
                    <div class="d-flex me-1 justify-content-end">
                        <button class="btn btn-outline-primary rounded-0 me-1" @onclick="@(() => OnClick.InvokeAsync(new ClickModel(PageType.Edit, item.Id)))">Edit</button>
                        <button class="btn btn-outline-danger rounded-0" @onclick="@(() => OnClick.InvokeAsync(new ClickModel(PageType.Delete, item.Id)))">Delete</button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter] public List<DirectorDTO> Model { get; set; } = new();
    [Parameter] public List<FilmDTO> Films { get; set; } = new();
    [Parameter] public EventCallback<ClickModel> OnClick { get; set; }

    private FilmDTO SelectedFilm { get; set; } = new FilmDTO();

    protected override async Task OnInitializedAsync()
    {
        Model = await AdminService.GetAsync<DirectorDTO>("director");
        Films = await AdminService.GetAsync<FilmDTO>("film");
    }

    private int GetFilmCount(int id)
    {
        return Films.Count(f => f.DirectorId == id);
    }

}