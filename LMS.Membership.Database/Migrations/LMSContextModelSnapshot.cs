// <auto-generated />
using System;
using LMS.Membership.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS.Membership.Database.Migrations
{
    [DbContext(typeof(LMSContext))]
    partial class LMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS.Membership.Database.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "The Wachowskis"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ridley Scott"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Guillermo del Toro"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Damien Chazelle"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Quentin Tarantino"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Robert Eggers"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Tommy Wiseau"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Chris Williams"
                        });
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<string>("FilmUrl")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("Free")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Released")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum",
                            DirectorId = 1,
                            FilmUrl = "https://www.youtube.com/watch?v=vKQi3bBA1y8",
                            Free = true,
                            Released = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum",
                            DirectorId = 2,
                            FilmUrl = "https://www.youtube.com/watch?v=P5ieIbInFpg",
                            Free = false,
                            Released = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Gladiator"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum",
                            DirectorId = 3,
                            FilmUrl = "https://www.youtube.com/watch?v=Od2NW1sfRdA",
                            Free = false,
                            Released = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Guillermo del Toro's Pinocchio"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorem ipsum",
                            DirectorId = 4,
                            FilmUrl = "https://www.youtube.com/watch?v=7d_jQycdQGo",
                            Free = true,
                            Released = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Whiplash"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Lorem ipsum",
                            DirectorId = 2,
                            FilmUrl = "https://www.youtube.com/watch?v=LjLamj-b0I8",
                            Free = false,
                            Released = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Alien"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lorem ipsum",
                            DirectorId = 5,
                            FilmUrl = "https://www.youtube.com/watch?v=4CV41hoyS8A",
                            Free = false,
                            Released = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Memento"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Lorem ipsum",
                            DirectorId = 6,
                            FilmUrl = "https://www.youtube.com/watch?v=0fUCuvNlOCg",
                            Free = false,
                            Released = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Django Unchained"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Lorem ipsum",
                            DirectorId = 6,
                            FilmUrl = "https://www.youtube.com/watch?v=s7EdQ4FqbhY",
                            Free = true,
                            Released = new DateTime(1994, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Lorem ipsum",
                            DirectorId = 7,
                            FilmUrl = "https://www.youtube.com/watch?v=iQXmlf3Sefg",
                            Free = false,
                            Released = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Witch"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Lorem ipsum",
                            DirectorId = 8,
                            FilmUrl = "https://www.youtube.com/watch?v=tfMTHIwTUXA",
                            Free = false,
                            Released = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Room"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Lorem ipsum",
                            DirectorId = 9,
                            FilmUrl = "https://www.youtube.com/watch?v=tfMTHIwTUXA",
                            Free = false,
                            Released = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Sea Beast"
                        });
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.FilmGenre", b =>
                {
                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("FilmId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("FilmGenres", (string)null);

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            FilmId = 1,
                            GenreId = 2
                        },
                        new
                        {
                            FilmId = 2,
                            GenreId = 1
                        },
                        new
                        {
                            FilmId = 2,
                            GenreId = 3
                        },
                        new
                        {
                            FilmId = 3,
                            GenreId = 4
                        },
                        new
                        {
                            FilmId = 3,
                            GenreId = 3
                        },
                        new
                        {
                            FilmId = 4,
                            GenreId = 3
                        },
                        new
                        {
                            FilmId = 5,
                            GenreId = 5
                        },
                        new
                        {
                            FilmId = 5,
                            GenreId = 2
                        },
                        new
                        {
                            FilmId = 6,
                            GenreId = 3
                        },
                        new
                        {
                            FilmId = 6,
                            GenreId = 6
                        },
                        new
                        {
                            FilmId = 7,
                            GenreId = 1
                        },
                        new
                        {
                            FilmId = 7,
                            GenreId = 3
                        },
                        new
                        {
                            FilmId = 7,
                            GenreId = 5
                        },
                        new
                        {
                            FilmId = 8,
                            GenreId = 3
                        },
                        new
                        {
                            FilmId = 8,
                            GenreId = 1
                        },
                        new
                        {
                            FilmId = 9,
                            GenreId = 5
                        },
                        new
                        {
                            FilmId = 10,
                            GenreId = 3
                        },
                        new
                        {
                            FilmId = 10,
                            GenreId = 6
                        },
                        new
                        {
                            FilmId = 10,
                            GenreId = 4
                        },
                        new
                        {
                            FilmId = 11,
                            GenreId = 4
                        });
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thriller"
                        });
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.SimilarFilms", b =>
                {
                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("SimilarFilmId")
                        .HasColumnType("int");

                    b.HasKey("FilmId", "SimilarFilmId");

                    b.HasIndex("SimilarFilmId");

                    b.ToTable("SimilarFilms");

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            SimilarFilmId = 5
                        },
                        new
                        {
                            FilmId = 2,
                            SimilarFilmId = 5
                        },
                        new
                        {
                            FilmId = 2,
                            SimilarFilmId = 7
                        },
                        new
                        {
                            FilmId = 3,
                            SimilarFilmId = 11
                        },
                        new
                        {
                            FilmId = 4,
                            SimilarFilmId = 6
                        },
                        new
                        {
                            FilmId = 4,
                            SimilarFilmId = 8
                        },
                        new
                        {
                            FilmId = 5,
                            SimilarFilmId = 1
                        },
                        new
                        {
                            FilmId = 5,
                            SimilarFilmId = 2
                        },
                        new
                        {
                            FilmId = 5,
                            SimilarFilmId = 9
                        },
                        new
                        {
                            FilmId = 6,
                            SimilarFilmId = 4
                        },
                        new
                        {
                            FilmId = 7,
                            SimilarFilmId = 8
                        },
                        new
                        {
                            FilmId = 7,
                            SimilarFilmId = 2
                        },
                        new
                        {
                            FilmId = 8,
                            SimilarFilmId = 7
                        },
                        new
                        {
                            FilmId = 8,
                            SimilarFilmId = 4
                        },
                        new
                        {
                            FilmId = 9,
                            SimilarFilmId = 5
                        },
                        new
                        {
                            FilmId = 11,
                            SimilarFilmId = 3
                        });
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.Film", b =>
                {
                    b.HasOne("LMS.Membership.Database.Entities.Director", "Director")
                        .WithMany("Films")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.FilmGenre", b =>
                {
                    b.HasOne("LMS.Membership.Database.Entities.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.Membership.Database.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.SimilarFilms", b =>
                {
                    b.HasOne("LMS.Membership.Database.Entities.Film", "Film")
                        .WithMany("SimilarFilms")
                        .HasForeignKey("FilmId")
                        .IsRequired();

                    b.HasOne("LMS.Membership.Database.Entities.Film", "Similar")
                        .WithMany()
                        .HasForeignKey("SimilarFilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Similar");
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.Director", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("LMS.Membership.Database.Entities.Film", b =>
                {
                    b.Navigation("SimilarFilms");
                });
#pragma warning restore 612, 618
        }
    }
}
